import discord
from discord.ext import commands
import asyncio
import flet as ft

# Создайте объект Intents и установите необходимые флаги
intents = discord.Intents.default()
intents.message_content = True
intents.members = True
intents.guilds = True
intents.bans = True
intents.moderation = True

# Создайте объект Client, передав объект Intents
client = discord.Client(intents=intents)

@client.event
async def on_ready():
    print(f'{client.user} запущен')

@client.event
async def on_message(message):
    if message.author == client.user:
        return

    # Обработка команд
    if message.content.startswith('.hello'):
        await message.channel.send(f'Привет, {message.author.mention}!')

    if message.content.startswith('.ban') and any(role.name == "Администратор" for role in message.author.roles):
        await handle_ban(message)

    if message.content.startswith('.serverinfo') and any(role.name == "Администратор" for role in message.author.roles):
        await handle_serverinfo(message)

    if message.content.startswith('.clear') and any(role.name == "Администратор" for role in message.author.roles):
        await handle_clear(message)

    if message.content.startswith('.kick') and any(role.name == "Администратор"for role in message.author.roles):
        await handle_kick(message)

    if message.content.startswith('.members') and any(role.name == "Администратор" for role in message.author.roles):
        await handle_members(message)

    if message.content.startswith('.help') and any(role.name == "Администратор" for role in message.author.roles):
        await handle_help(message)

# Функция для обработки команды .ban
async def handle_ban(message):
    parts = message.content.split(' ')
    if len(parts) > 2 and len(message.mentions) == 1:
        target_user = message.mentions[0]
        reason = ' '.join(parts[2:])
        try:
            await target_user.ban(reason=reason)
            embed = discord.Embed(title="Информация о блокировке", color=discord.Color.dark_purple())
            embed.add_field(name=" ", value=f"Администратор: {message.author}\nПричина: {reason}\nЗаблокированный: {target_user}", inline=False)
            await message.channel.send(embed=embed)
        except discord.errors.Forbidden:
            await message.channel.send(f'У меня нет прав для блокировки {target_user.mention}.')
    else:
        await message.channel.send('Неверный формат команды. Используйте: .ban @игрок причина')

#функция для обработки команды .kick

async def handle_kick(message):
    parts = message.content.split(' ')
    if len(parts) > 2 and len(message.mentions) == 1:
        target_user = message.mentions[0]
        reason = ' '.join(parts[2:])
        try:
            await message.guild.kick(target_user, reason=reason)
            embed = discord.Embed(title="Информация о кике", color=discord.Color.dark_purple())
            embed.add_field(name=" ", value=f"Администратор: {message.author}\nПричина: {reason}\nУдалённый: {target_user}", inline=False)
            await message.channel.send(embed=embed)
        except discord.errors.Forbidden:
             await message.channel.send(f'У меня нет прав для кика {target_user.mention}.')
    else:
        await message.channel.send('Неверный формат команды. Используйте: .kick @игрок причина')

# Функция для обработки команды .serverinfo

async def handle_serverinfo(message):
    async for msg in message.channel.history(limit=2):
        await msg.delete()
    embed = discord.Embed(title="Информация о сервере", color=discord.Color.blue())
    embed.add_field(name="Участники", value=f"Всего участников: {len(message.guild.members)}", inline=False)
    embed.add_field(name="Каналы", value=f"Текстовых каналов: {len(message.guild.text_channels)}\nГолосовых каналов: {len(message.guild.voice_channels)}\nКатегорий: {len(message.guild.categories)}", inline=False)
    channel_stat = discord.utils.get(message.guild.channels, name="статистика")
    if channel_stat:
        await channel_stat.send(embed=embed)
    else:
        print("Канал 'статистика' не найден")

# Функция для обработки команды .clear
async def handle_clear(message):
    parts = message.content.split(' ')
    if len(parts) > 1:
        if parts[1] == "all":
            try:
                await message.channel.purge(limit=None)
                await message.author.send('Сообщения успешно очищены.')
            except discord.errors.Forbidden:
                await message.author.send('У меня нет прав для очистки сообщений.')
        else:
            try:
                count = int(parts[1])
                await message.channel.purge(limit=count + 1)
                await message.author.send(f'Удалено {count} сообщений.')
            except ValueError:
                await message.author.send('Неверный формат. Используйте ".clear all" для очистки всех сообщений или ".clear [число] для очистки заданного количества сообщений.')
            except discord.errors.Forbidden:
                await message.author.send('У меня нет прав для очистки сообщений.')
    else:
        await message.author.send(
            'Не указано количество сообщений для очистки. Используйте ".clear all" для очистки всех сообщений или ".clear [число] для очистки заданного количества сообщений.')
async def handle_members(message):
    members_info = [f"{member.mention}-{member.name} (ID: {member.id})" for member in message.guild.members]
    embed = discord.Embed(title='Участники сервера', description='\n'.join(members_info), color=0xffffff)
    await message.channel.send(embed=embed)

async def handle_help(message):
    embed = discord.Embed(title="Доступные команды сервера", color=0xffffff)
    embed.add_field(name="Модерация", value=f"Блокировка: .ban @Нарушитель причина \nУдаление: .kick @Нарушитель причина \nОтчистка: .clear количество(можно цифрой либо all для удаления всего \nСписок всех учатников: .members \nВывод информации о сервере: .serverinfo(писать только в канал статистика)", inline=False)
    await message.channel.send(embed=embed)
client.run('MTI0NjY1Mzg3MjQyMDY4Mzg4Ng.G1N5gg.2vL4aj8ZWornQxSTKwNgjG9aBvQ6CNL_az9tOg')
