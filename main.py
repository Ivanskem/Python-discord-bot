import nextcord
import requests
import datetime
from datetime import timedelta
import os
import logging
import openai
from nextcord.ext import commands, tasks
from nextcord import Interaction, SlashOption
from nextcord.errors import Forbidden
import asyncio
import time
import sys
import shutil
from win10toast import ToastNotifier
import sqlite3
from apscheduler.schedulers.asyncio import AsyncIOScheduler
# import flet as ft
intents = nextcord.Intents.default()
intents.message_content = True
intents.members = True
intents.guilds = True
intents.bans = True
intents.moderation = True
logging.basicConfig(filename="log.log",
                    level=logging.INFO,
                    format='%(asctime)s - %(levelname)s - %(message)s')

client_discord = nextcord.Client(intents=intents)
scheduler = AsyncIOScheduler()

API_Weather = 'get your api key on openweathermap.org/api'
Forbidden_words = ['enter you list of forbidden words']
guild_owner_emodji_id = 'add id of your emodji'
guild_owner_emodji = f"<:customemoji:{guild_owner_emodji_id}>"
verification_level_emodji_id = 'add id of your emodji'
verification_level_emodji = f"<:customemoji:{verification_level_emodji_id}>"
created_since_emodji_id = 'add id of your emodji'
created_since_emodji = f"<:customemoji:{created_since_emodji_id}>"
all_categories_emodji_id = 'add id of your emodji'
all_categories_emodji = f"<:customemoji:{all_categories_emodji_id}>"
categories_emodji_id = 'add id of your emodji'
categories_emodji = f"<:customemoji:{categories_emodji_id}>"
members_emodji_id = 'add id of your emodji'
members_emodji = f"<:customemoji:{members_emodji_id}>"
boost_emodji_id = 'add id of your emodji'
boost_emodji = f"<:customemoji:{boost_emodji_id}>"
voice_emodji_id = 'add id of your emodji'
voice_emodji = f"<:customemoji:{voice_emodji_id}>"
stack_emodji_id = 'add id of your emodji'
stack_emodji = f"<:customemoji:{stack_emodji_id}>"
slide_emodji_id = 'add id of your emodji'
slide_emodji = f"<:customemoji:{slide_emodji_id}>"
reason_emodji_id = 'add id of your emodji'
reason_emodji = f"<:customemoji:{reason_emodji_id}>"
telegram_channels_link = 'Your link to telegram chat/channel'
discord_server_link = 'Your link to discord server'
servername_to_footer = 'enter name of server'
servername_database = 'enter name of server'
channel_stat = 'enter your statistic channel id'
try:
    with open('Openai_API.txt', 'r') as f:
        openai.api_key = f.read().strip()
except FileNotFoundError:
    openai.api_key = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∞–ø–∏ –¥–ª—è ChatGPT: ")
    with open('Openai_API.txt', 'w') as f:
        f.write(openai.api_key)

try:
    with open('token.txt', 'r') as f:
        TOKEN = f.read().strip()
except FileNotFoundError:
    TOKEN = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–æ–∫–µ–Ω Discord: ")
    with open('token.txt', 'w') as f:
        f.write(TOKEN)

def win_notification(title, message):
    toaster = ToastNotifier()
    toaster.show_toast(title, message, duration=0, threaded=True)

async def send_server_info():
    logger = logging.getLogger(__name__)
    logger.info(f'–û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ—Ä–≤–µ—Ä–µ | {datetime.datetime.now().replace(microsecond=0)}')
    channel = client_discord.get_channel(channel_stat)
    if channel:
        guild = channel.guild
    else:
        logger.error(f'–ö–∞–Ω–∞–ª —Å –∞–π–¥–∏ {channel} –Ω–µ –Ω–∞–π–¥–µ–Ω!')
    async for msg in channel.history(limit=1):
        await msg.delete()
    bots = sum(1 for member in guild.members if member.bot)
    total_members = guild.member_count
    without_bot = total_members - bots
    time = datetime.datetime.now().replace(microsecond=0)

    server_owner = guild.owner.mention
    if server_owner == None:
        server_owner = '–ù–µ —É–∫–∞–∑–∞–Ω–æ'
    verification_level = guild.verification_level
    if verification_level == guild.verification_level.low:
        verification_level_show = '–ù–∏–∑–∫–∏–π'
    elif verification_level == guild.verification_level.medium:
        verification_level_show = '–°—Ä–µ–¥–Ω–∏–π'
    elif verification_level == guild.verification_level.high:
        verification_level_show = '–í—ã—Å–æ–∫–∏–π'
    else:
        verification_level_show = '–ù–µ—Ç'
    created_at = guild.created_at
    now = datetime.datetime.now(nextcord.utils.utcnow().tzinfo)
    text_channels = len(guild.text_channels)
    voice_channels = len(guild.voice_channels)
    categories = len(guild.categories)

    embed = nextcord.Embed(title=guild.name, color=0x6fa8dc)
    embed.set_thumbnail(url=guild.icon.url)
    embed.add_field(name='–û—Å–Ω–æ–≤–Ω–æ–µ', value=f'{guild_owner_emodji} –í–ª–∞–¥–µ–ª–µ—Ü: {server_owner}\n'
                                           f'{verification_level_emodji} –£—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–≤–µ—Ä–∫–∏: {verification_level_show}\n'
                                           f'{created_since_emodji} –°–æ–∑–¥–∞–Ω: <t:{int(created_at.timestamp())}:F>\n(<t:{int(created_at.timestamp())}:R>)\n'
                                           f'{all_categories_emodji} –í—Å–µ–≥–æ {text_channels + voice_channels + categories} –∫–∞–Ω–∞–ª–æ–≤\n'
                                           f'{stack_emodji} {all_categories_emodji} –¢–µ–∫—Å—Ç–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã: {text_channels}\n'
                                           f'{stack_emodji} {voice_emodji} –ì–æ–ª–æ—Å–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã: {voice_channels}\n'
                                           f'{slide_emodji} {categories_emodji} –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: {categories}\n')
    embed.add_field(name='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', value=f'{members_emodji} –í—Å–µ–≥–æ {total_members} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n'
                                               f'{stack_emodji} –ë–æ—Ç–æ–≤: {bots}\n'
                                               f'{slide_emodji} –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {without_bot}\n')
    boost_level = guild.premium_tier
    embed.add_field(name='–ë—É—Å—Ç—ã',
                    value=f'{boost_emodji} –£—Ä–æ–≤–µ–Ω—å: {boost_level} (–±—É—Å—Ç–æ–≤ - {guild.premium_subscription_count})\n')
    embed.add_field(name='–°—Å—ã–ª–∫–∏',
                    value=f'üì≤Telegram-–∫–∞–Ω–∞–ª: {telegram_channels_link} \nüëæDiscord-—Å–µ—Ä–≤–µ—Ä: {discord_server_link}\n')
    embed.set_footer(text=f'‚Ä¢ {servername_to_footer} Info {time}',
                     icon_url=guild.icon.url)
    await channel.send(embed=embed)
async def warn(interaction, guild_id, user_id, user_name, guild):
    database_location = sqlite3.connect(f'{servername_database}_discord.db')
    cursor = database_location.cursor()
    cursor.execute("SELECT warns FROM warn_list WHERE guild_id=? AND user_id=?",
                   (guild_id, user_id))
    result = cursor.fetchone()
    if result is None:
        cursor.execute("INSERT INTO warn_list (guild_id, user_id, warns) VALUES (?, ?, ?)",
                       (guild_id, user_id, 1))
    else:
        current_warns = result[0]
        cursor.execute("UPDATE warn_list SET warns=?, last_warn_time=? WHERE guild_id=? AND user_id=?",
                       (current_warns + 1, datetime.datetime.now(), guild_id, user_id))
    cursor.execute("SELECT warns FROM warn_list WHERE guild_id=? AND user_id=?",
                   (guild_id, user_id))
    result = cursor.fetchone()
    warn_count = result[0]
    database_location.commit()
    database_location.close()
    reason = '–Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞ –≤—ã–¥–∞—á–∏ –Ω–∞–∫–∞–∑–∞–Ω–∏—è!'
    embed = nextcord.Embed(title='–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=nextcord.Color.dark_purple())
    embed.add_field(name=f'{user_name} –≤–∞—à –±—ã–ª–æ –≤—ã–¥–∞–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ\n–ü—Ä–∏—á–∏–Ω–∞: {reason}\n–£ –≤–∞—Å {warn_count} –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π ', value='')
    embed.set_footer(text=f'‚Ä¢ {servername_to_footer} Warn | {datetime.datetime.now().replace(microsecond=0)}',
                     icon_url=interaction.guild.icon.url)
    await interaction.channel.send(embed=embed)
@client_discord.event
async def on_ready():
    print(f'{client_discord.user} –∑–∞–ø—É—â–µ–Ω')
    print(' ')
    message = f"–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞: /ban –ù–∞—Ä—É—à–∏—Ç–µ–ª—å –ø—Ä–∏—á–∏–Ω–∞ \n–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞: /unban –ù–∞—Ä—É—à–∏—Ç–µ–ª—å –ø—Ä–∏—á–∏–Ω–∞ \n–£–¥–∞–ª–µ–Ω–∏–µ: /kick –ù–∞—Ä—É—à–∏—Ç–µ–ª—å –ø—Ä–∏—á–∏–Ω–∞ \n–û—Ç—á–∏—Å—Ç–∫–∞: /clear –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ(–º–æ–∂–Ω–æ –ª—é–±—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ª–∏–±–æ 0 –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ–≥–æ) \n–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —É—á–∞—Ç–Ω–∏–∫–æ–≤: /members \n–í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ—Ä–≤–µ—Ä–µ: /serverinfo \n–ó–∞–≥–ª—É—à–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞: /mute –ù–∞—Ä—É—à–∏—Ç–µ–ª—å –ø—Ä–∏—á–∏–Ω–∞"f" \n–†–∞–∑–≥–ª—É—à–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞: /unmute –ù–∞—Ä—É—à–∏—Ç–µ–ª—å –ø—Ä–∏—á–∏–Ω–∞ \n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —É—á–∞—Å—Ç–Ω–∏–∫–µ: /info –£—á–∞—Å—Ç–Ω–∏–∫ \n–ê–≤–∞—Ç–∞—Ä —É—á–∞—Å—Ç–Ω–∏–∫–∞: /avatar –£—á–∞—Å—Ç–Ω–∏–∫ \n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–≥–æ–¥–µ: /weather –ì–æ—Ä–æ–¥(–ª—é–±–æ–π) \n–í—ã–≤–æ–¥ —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: /commands (–≤ –∫–∞–Ω–∞–ª #bot-commands, –Ω–µ –ø–∏—Å–∞—Ç—å) \n–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: /say (—Å–æ–æ–±—â–µ–Ω–∏–µ)"
    print(message)
    scheduler.add_job(send_server_info, 'interval', days=7)
    scheduler.start()
    database_location = sqlite3.connect(f'{servername_database}_discord.db')
    cursor = database_location.cursor()
    cursor.execute('''
                        CREATE TABLE IF NOT EXISTS users_list (
                            user_id INTEGER PRIMARY KEY,
                            user_name TEXT NOT NULL,
                            user_mention TEXT NOT NULL,
                            user_joined_date DATETIME NOT NULL
                        )
                    ''')
    cursor.execute("""
            CREATE TABLE IF NOT EXISTS mod_actions (
                action_id INTEGER PRIMARY KEY AUTOINCREMENT,
                action_type TEXT NOT NULL,
                guild_id INTEGER NOT NULL,
                moderator_name TEXT NOT NULL,
                moderator_id INTEGER NOT NULL,
                target_user_name TEXT NOT NULL,
                target_user_id INTEGER NOT NULL,
                reason TEXT,
                action_time DATETIME NOT NULL
            )
        """)
    cursor.execute("""
            CREATE TABLE IF NOT EXISTS warn_list (
                guild_id INTEGER NOT NULL,
                user_id INTEGER NOT NULL,
                warns INTEGER DEFAULT 0,
                last_warn_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            )
        """)
    database_location.commit()
    database_location.close()
    win_notification("Bot Started", f"–î–∏—Å–∫–æ—Ä–¥ –±–æ—Ç –∑–∞–ø—É—â–µ–Ω\n{servername_database}_discord.db started\nTime: {datetime.datetime.now().replace(microsecond=0)}")
@client_discord.event
async def on_member_join(member):
    user_id = member.id
    user_name = member.name
    user_mention = member.mention
    user_joined_date = member.joined_at

    logger = logging.getLogger(__name__)
    logger.info(f'–ö —Å–µ—Ä–≤–µ—Ä—É –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –Ω–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫: {user_name}')

    try:
        database_location = sqlite3.connect(f'{servername_database}_discord.db')
        cursor = database_location.cursor()
        cursor.execute("INSERT INTO users_list (user_id, user_name, user_mention, user_joined_date) VALUES (?, ?, ?, ?)",
                       (user_id, user_name, user_mention, user_joined_date))
        database_location.commit()
    except sqlite3.Error as e:
        logger.error(f'Something went wrong. Error: {e}')
    finally:
        database_location.close()

    embed_server = nextcord.Embed(
        title=f'–ü—Ä–∏–≤–µ—Ç, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä "{servername_database}"',
        color=nextcord.Color.purple()
    )
    embed_server.set_thumbnail(url=member.avatar.url)
    embed_server.add_field(name='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', value='–ò—â–∏ –≤—Å—é –Ω—É–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∫–∞–Ω–∞–ª–µ "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"')
    embed_server.set_footer(text=f'{servername_database} Welcome | {datetime.datetime.now().replace(microsecond=0)}')

    embed_user = nextcord.Embed(
        title=f'–ü—Ä–∏–≤–µ—Ç, –±–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É "{servername_database}"',
        color=nextcord.Color.purple()
    )
    embed_user.set_thumbnail(url=member.avatar.url)
    embed_user.add_field(name='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', value=f'–í—Å—é –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª–µ "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è".')
    embed_user.set_footer(text=f'{servername_database} Welcome | {datetime.datetime.now().replace(microsecond=0)}')

    channel = nextcord.utils.get(member.guild.channels, name='–¥–æ–±—Ä–æ-–ø–æ–∂–∞–ª–æ–≤–∞—Ç—å')
    if channel:
        await channel.send(embed=embed_server)
    else:
        logger.error(f'–ö–∞–Ω–∞–ª admin –Ω–µ –Ω–∞–π–¥–µ–Ω, —É–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω—ã–π –∫–∞–Ω–∞–ª!')

    await member.send(embed=embed_user)
@client_discord.event
async def on_member_leave(member):
    embed_server = nextcord.Embed(title=f'–£–¥–∞—á–∏, —É—á–∞—Å—Ç–Ω–∏–∫ {member.name} –ø–æ–∫–∏–Ω—É–ª —Å–µ—Ä–≤–µ—Ä "{servername_database}"',
                                  color=nextcord.Color.dark_blue())
    embed_server.set_thumbnail(url=member.avatar.url)
    embed_server.add_field(name='', value='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–∫–∏–Ω—É–ª —Å–µ—Ä–≤–µ—Ä, —É–¥–∞—á–∏ –µ–º—É!')
    embed_server.set_footer(text=f'{servername_database} Goodbye | {datetime.datetime.now().replace(microsecond=0)}')

    embed_user = nextcord.Embed(title=f'–£–¥–∞—á–∏, –≤—ã –ø–æ–∫–∏–Ω—É–ª–∏ —Å–µ—Ä–≤–µ—Ä "{servername_database}"',
                                color=nextcord.Color.purple())
    embed_user.set_thumbnail(url=member.avatar.url)
    embed_user.add_field(name=' ', value=f'–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤—ã –ø–æ–∫–∏–Ω—É–ª–∏ —Å–µ—Ä–≤–µ—Ä, —É–¥–∞—á–∏ –≤–∞–º!')
    embed_user.set_footer(text=f'{servername_database} Goodbye | {datetime.datetime.now().replace(microsecond=0)}')
    channel = nextcord.utils.get(member.guild.channels, name='admin')
    if channel:
        await channel.send(embed=embed_server)
    else:
        logger.error(f'–ö–∞–Ω–∞–ª {channel} –Ω–µ –Ω–∞–π–¥–µ–Ω, —É–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω—ã–π –∫–∞–Ω–∞–ª!')
    await member.send(embed=embed_user)
@client_discord.event
async def on_message(message):
    for word in Forbidden_words:
        if word in message.content:
            if any(role.name == "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä" for role in message.author.roles):
                return
            else:
                async for msg in message.channel.history(limit=1):
                    await msg.delete()
                await message.channel.send(f'{message.author.mention}. –í –≤–∞—à–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω–æ–µ —Å–ª–æ–≤–æ. –ü—Ä–æ—Å—å–±–∞ –±–æ–ª—å—à–µ –Ω–µ –Ω–∞—Ä—É—à–∞—Ç—å.')
                return

@client_discord.slash_command(name='ban', description='–ë–ª–æ–∫–∏—Ä—É–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞')
async def ban(interaction: Interaction, member: nextcord.Member,
              reason: str = SlashOption(
                  description="–ü—Ä–∏—á–∏–Ω–∞ –±–∞–Ω–∞",
                  default="–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
              )):
    logger = logging.getLogger(__name__)
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {interaction.user.mention} –≤—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏")
    if nextcord.utils.get(interaction.user.roles, name='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä') is not None:
        try:
            await member.ban(reason=reason)
            logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {member.mention} –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω {interaction.user.mention} –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {reason}')
            try:
                database_location = sqlite3.connect(f'{servername_database}_discord.db')
                cursor = database_location.cursor()
                cursor.execute("""
                    INSERT INTO mod_actions (action_type, guild_id, moderator_name, moderator_id, target_user_name, target_user_id, reason, action_time) 
                    VALUES (?, ?, ?, ?, ?, ?, ?, ?)
                """, ('Ban', interaction.guild.id, interaction.user.name, interaction.user.id, member.name, member.id, reason,
                      datetime.datetime.now()))
                cursor.close()
                database_location.commit()
            except sqlite3.Error as e:
                logger.error(f'Something went wrong! Error: {e}')
            finally:
                database_location.close()
            if reason in ['–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞']:
                await warn(interaction, interaction.guild.id, interaction.user.id,
                           interaction.user.name, interaction.guild)
            time = datetime.datetime.now().replace(microsecond=0)
            embed = nextcord.Embed(title="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ", color=nextcord.Color.dark_purple())
            embed.add_field(name=' ', value=f'–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {interaction.user.mention}\n{reason_emodji} –ü—Ä–∏—á–∏–Ω–∞: {reason}\n–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π: {member.mention}\n')
            embed.set_footer(text=f'‚Ä¢ {servername_to_footer} Moderation | {datetime.datetime.now().replace(microsecond=0)}',
                             icon_url=interaction.guild.icon.url)
            await interaction.response.send_message(embed=embed)
        except nextcord.Forbidden:
            logger.error('–£ –±–æ—Ç–∞ –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!')
            await interaction.response.send_message('–£ –º–µ–Ω—è –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!', ephemeral=True)
    else:
        logger.info(f'–£ {interaction.user.mention} –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
        await interaction.response.send_message('–£ –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!', ephemeral=True)
@client_discord.slash_command(name='warn', description='–í—ã–¥–∞—ë—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫—É')
async def warn_command(interaction: Interaction, member: nextcord.Member,
                       action: str = SlashOption(description='–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ',
                                                 choices=['show', 'give'],
                                                 default='show'),
                       reason: str = SlashOption(description='–ü—Ä–∏—á–∏–Ω–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è',
                                                 default='–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞'
                       )):
    logger = logging.getLogger(__name__)
    logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {interaction.user.name} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É –¥–ª—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞')
    if nextcord.utils.get(interaction.user.roles, name='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä') is not None:
        if action == 'show':
            try:
                database_location = sqlite3.connect(f'{servername_database}_discord.db')
                cursor = database_location.cursor()
                cursor.execute("SELECT warns FROM warn_list WHERE guild_id=? AND user_id=?",
                               (interaction.guild.id, member.id))
                warn_count = cursor.fetchone()
                cursor.execute("SELECT last_warn_time FROM warn_list WHERE guild_id=? AND user_id=?",
                               (interaction.guild.id, member.id))
                warn_last = cursor.fetchone()
            except sqlite3.Error as e:
                await interaction.response.send_message(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}', ephemeral=True)
            try:
                embed = nextcord.Embed(title=f'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ {member.name}', color=nextcord.Color.dark_purple())
                embed.add_field(name=' ', value=f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: {warn_count[0]}\n'
                                                f'–ü–æ—Å–ª–µ–¥–Ω–µ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: {warn_last[0]}')
                embed.set_footer(text=f'‚Ä¢{servername_to_footer} warn | {datetime.datetime.now().replace(microsecond=0)}',
                                 icon_url=interaction.guild.icon.url)
                await interaction.response.send_message(embed=embed, ephemeral=True)
            except TypeError:
                embed = nextcord.Embed(title='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', color=nextcord.Color.dark_purple())
                embed.add_field(name='', value=f'{member.name} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!')
                embed.set_footer(
                    text=f'‚Ä¢{servername_to_footer} Warn | {datetime.datetime.now().replace(microsecond=0)}',
                    icon_url=interaction.guild.icon.url)
        if action == 'give':
            try:
                database_location = sqlite3.connect(f'{servername_database}_discord.db')
                cursor = database_location.cursor()
                cursor.execute("SELECT warns FROM warn_list WHERE guild_id=? AND user_id=?",
                               (interaction.guild.id, member.id))
                result = cursor.fetchone()
                if result is None:
                    cursor.execute("INSERT INTO warn_list (guild_id, user_id, warns) VALUES (?, ?, ?)",
                                   (interaction.guild.id, member.id, 1))
                else:
                    current_warns = result[0]
                    cursor.execute("UPDATE warn_list SET warns=?, last_warn_time=? WHERE guild_id=? AND user_id=?",
                                   (current_warns + 1, datetime.datetime.now(), interaction.guild.id, member.id))
                database_location.commit()
                cursor.execute("SELECT warns FROM warn_list WHERE guild_id=? AND user_id=?",
                               (interaction.guild.id, member.id))
                embed_result = cursor.fetchone()
                database_location.close()
            except sqlite3.Error as e:
                logger.error(f'Something went w rong. Error: {e}')
                await interaction.response.send_message(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}')
            embed = nextcord.Embed(title='–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', color=nextcord.Color.dark_purple())
            embed.add_field(name='', value=f'–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {interaction.user.mention}\n{reason_emodji} –ü—Ä–∏—á–∏–Ω–∞: {reason}\n–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥—ë–Ω–Ω—ã–π: {member.mention}\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: {embed_result[0]}')
            embed.set_footer(text=f'‚Ä¢ {servername_to_footer} Warn | {datetime.datetime.now().replace(microsecond=0)}',
                             icon_url=interaction.guild.icon.url)
            await interaction.response.send_message(embed=embed)
    else:
        await interaction.response.send_message(f'–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!', ephemeral=True)
@client_discord.slash_command(name='kick', description='–£–¥–∞–ª—è–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞, —É—á–∞—Å—Ç–Ω–∏–∫ —Å–º–æ–∂–µ—Ç –∑–∞–π—Ç–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ')
async def kick(interaction: Interaction, member: nextcord.Member, reason: str = SlashOption(description='–ü—Ä–∏—á–∏–Ω–∞ —É–¥–∞–ª–µ–Ω–∏—è', default="–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞")):
    logger = logging.getLogger(__name__)
    logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {interaction.user.mention} –≤—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É —É–¥–∞–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞')
    if nextcord.utils.get(interaction.user.roles, name='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä') is not None:
        try:
            await member.kick(reason=reason)
            logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {member.mention} –±—ã–ª —É–¥–∞–ª—ë–Ω {interaction.user.mention} –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {reason}')
            try:
                database_location = sqlite3.connect(f'{servername_database}_discord.db')
                cursor = database_location.cursor()
                cursor.execute("""
                    INSERT INTO mod_actions (action_type, guild_id, moderator_name, moderator_id, target_user_name, target_user_id, reason, action_time) 
                    VALUES (?, ?, ?, ?, ?, ?, ?, ?)
                """, ('Kick', interaction.guild.id, interaction.user.name, interaction.user.id, member.name, member.id, reason,
                      datetime.datetime.now()))
                database_location.commit()
            except sqlite3.Error as e:
                logger.error(f'Something went wrong! Error: {e}')
            finally:
                database_location.close()
            if reason in ['–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞']:
                await warn(interaction, interaction.guild.id, interaction.user.id,
                           interaction.user.name, interaction.guild)
            time = datetime.datetime.now().replace(microsecond=0)
            embed = nextcord.Embed(title="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —É–¥–∞–ª–µ–Ω–∏–∏", color=nextcord.Color.dark_purple())
            embed.add_field(name=' ', value=f'–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {interaction.user.mention}\n{reason_emodji} –ü—Ä–∏—á–∏–Ω–∞: {reason}\n–£–¥–∞–ª—ë–Ω–Ω—ã–π: {member.mention}')
            embed.set_footer(text=f'‚Ä¢ {servername_to_footer} warn | {datetime.datetime.now().replace(microsecond=0)}',
                             icon_url=interaction.guild.icon.url)
            await interaction.response.send_message(embed=embed)
        except nextcord.Forbidden:
            logger.error('–£ –±–æ—Ç–∞ –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!')
            await interaction.response.send_message('–£ –º–µ–Ω—è –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!',ephemeral=True)
    else:
        logger.info(f'–£ {interaction.user.mention} –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
        await interaction.response.send_message('–£ –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!',ephemeral=True)
@client_discord.slash_command(name='server-info', description='–í—ã–≤–æ–¥–∏—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–µ—Ä–≤–µ—Ä–∞')
async def serverinfo(interaction: Interaction,
                     type: str = SlashOption(description='–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–∫–æ–π —Ç–∏–ø —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–≤–µ—Å—Ç–∏: –Ω–æ–≤–∞—è –∏–ª–∏ —Å—Ç–∞—Ä–∞—è',
                                               choices=['new', 'old'],
                                               default='new'
                                               )):
    logger = logging.getLogger(__name__)
    logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {interaction.user.mention} –≤—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É –≤—ã–≤–æ–¥–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞')
    if nextcord.utils.get(interaction.user.roles, name='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'):
        if type == 'new':
            guild = interaction.guild
            bots = sum(1 for member in guild.members if member.bot)
            total_members = guild.member_count
            without_bot = total_members - bots
            time = datetime.datetime.now().replace(microsecond=0)

            server_owner = guild.owner.mention
            if server_owner == None:
                server_owner = '–ù–µ —É–∫–∞–∑–∞–Ω–æ'
            verification_level = guild.verification_level
            if verification_level == guild.verification_level.low:
                verification_level_show = '–ù–∏–∑–∫–∏–π'
            elif verification_level == guild.verification_level.medium:
                verification_level_show = '–°—Ä–µ–¥–Ω–∏–π'
            elif verification_level == guild.verification_level.high:
                verification_level_show = '–í—ã—Å–æ–∫–∏–π'
            else:
                verification_level_show = '–ù–µ—Ç'
            created_at = guild.created_at
            now = datetime.datetime.now(nextcord.utils.utcnow().tzinfo)
            text_channels = len(guild.text_channels)
            voice_channels = len(guild.voice_channels)
            categories = len(guild.categories)

            embed = nextcord.Embed(title=guild.name, color=0x6fa8dc)
            embed.set_thumbnail(url=guild.icon.url)
            embed.add_field(name='–û—Å–Ω–æ–≤–Ω–æ–µ', value=f'{guild_owner_emodji} –í–ª–∞–¥–µ–ª–µ—Ü: {server_owner}\n'
                                              f'{verification_level_emodji} –£—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–≤–µ—Ä–∫–∏: {verification_level_show}\n'
                                              f'{created_since_emodji} –°–æ–∑–¥–∞–Ω: <t:{int(created_at.timestamp())}:F>\n(<t:{int(created_at.timestamp())}:R>)\n'
                                              f'{all_categories_emodji} –í—Å–µ–≥–æ {text_channels + voice_channels + categories} –∫–∞–Ω–∞–ª–æ–≤\n'
                                              f'{stack_emodji} {all_categories_emodji} –¢–µ–∫—Å—Ç–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã: {text_channels}\n'
                                              f'{stack_emodji} {voice_emodji} –ì–æ–ª–æ—Å–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã: {voice_channels}\n'
                                              f'{slide_emodji} {categories_emodji} –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: {categories}\n')
            embed.add_field(name='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', value=f'{members_emodji} –í—Å–µ–≥–æ {total_members} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n'
                                                       f'{stack_emodji} –ë–æ—Ç–æ–≤: {bots}\n'
                                                       f'{slide_emodji} –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {without_bot}\n')
            boost_level = guild.premium_tier
            embed.add_field(name='–ë—É—Å—Ç—ã', value=f'{boost_emodji} –£—Ä–æ–≤–µ–Ω—å: {boost_level} (–±—É—Å—Ç–æ–≤ - {guild.premium_subscription_count})\n')
            embed.add_field(name='–°—Å—ã–ª–∫–∏', value=f'üì≤Telegram-–∫–∞–Ω–∞–ª: {telegram_channels_link} \nüëæDiscord-—Å–µ—Ä–≤–µ—Ä: {discord_server_link}\n')
            embed.set_footer(text=f'‚Ä¢ –ó–∞–ø—Ä–æ—Å –æ—Ç {interaction.user}\n‚Ä¢ {servername_to_footer} Info {time}',
                             icon_url=interaction.user.avatar.url)
            await interaction.response.send_message(embed=embed, ephemeral=True)
        if type == 'old':
            logger = logging.getLogger(__name__)
            logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {interaction.user.mention} –≤—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É –≤—ã–≤–æ–¥–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞')
            if nextcord.utils.get(interaction.user.roles, name="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä") is not None:
                guild = nextcord.utils.get(client_discord.guilds, id=1171462603260821585)
                bots = sum(1 for member in guild.members if member.bot)
                admin_role = nextcord.utils.get(guild.roles, name="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
                admin_count = len([member for member in interaction.guild.members if admin_role in member.roles])
                verify_role = nextcord.utils.get(guild.roles, name="–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω‚úÖÔ∏è")
                verify_count = len([member for member in interaction.guild.members if verify_role in member.roles])
                time = datetime.datetime.now().replace(microsecond=0)

                embed = nextcord.Embed(title="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ", color=0xffffff)
                embed.set_thumbnail(url=guild.icon.url)
                embed.add_field(name="–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: ", value=f'<t:{int(guild.created_at.timestamp())}:R>',
                                inline=False)
                embed.add_field(name="–£—á–∞—Å—Ç–Ω–∏–∫–∏",
                                value=f"–í—Å–µ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {len(guild.members)} \n"
                                      f"–ë–æ—Ç–æ–≤: {str(bots)} \n"
                                      f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: {admin_count} \n"
                                      f"–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–ª–∏—Å—å: {verify_count}",
                                inline=False)
                embed.add_field(name="–ö–∞–Ω–∞–ª—ã",
                                value=f"–¢–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤: {len(guild.text_channels)}\n"
                                      f"–ì–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤: {len(guild.voice_channels)}\n"
                                      f"–ö–∞—Ç–µ–≥–æ—Ä–∏–π: {len(guild.categories)} ",
                                inline=False)
                embed.add_field(name="–°—Å—ã–ª–∫–∏",
                                value=f"üì≤Telegram-–∫–∞–Ω–∞–ª: {telegram_channels_link} \nüëæDiscord-—Å–µ—Ä–≤–µ—Ä: {discord_server_link}")
                embed.set_footer(text=f'‚Ä¢ –ó–∞–ø—Ä–æ—Å –æ—Ç {interaction.user}\n‚Ä¢ {servername_to_footer} Info {time}',
                                 icon_url=interaction.user.avatar.url)
                await interaction.response.send_message(embed=embed, ephemeral=True)
    else:
        await interaction.response.send_message(
            '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –∫–∞–Ω–∞–ª #—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', ephemeral=True)
@client_discord.slash_command(name='clear', description='–£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è')
async def clear(interaction: Interaction, limit: int = SlashOption(description='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π (0 - —É–¥–∞–ª–∏—Ç—å –≤—Å—ë)')):
    logger = logging.getLogger(__name__)
    logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {interaction.user.mention} –≤—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π')
    if nextcord.utils.get(interaction.user.roles, name='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä') is not None:
        try:
            if limit == 0:
                await interaction.channel.purge(limit=None)
            else:
                await interaction.channel.purge(limit=limit)

            if interaction.response.is_done():
                await interaction.followup.send('–°–æ–æ–±—â–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω—ã', ephemeral=True)
            else:
                await interaction.response.send_message('–°–æ–æ–±—â–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω—ã', ephemeral=True)
        except nextcord.errors.Forbidden:
            if interaction.response.is_done():
                await interaction.followup.send('–£ –º–µ–Ω—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π.', ephemeral=True)
            else:
                await interaction.response.send_message('–£ –º–µ–Ω—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π.', ephemeral=True)
        except ValueError:
            if interaction.response.is_done():
                await interaction.followup.send('–í—ã –≤–≤–µ–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —á–∏—Å–ª–æ', ephemeral=True)
            else:
                await interaction.response.send_message('–í—ã –≤–≤–µ–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —á–∏—Å–ª–æ', ephemeral=True)
    else:
        if interaction.response.is_done():
            await interaction.followup.send('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π', ephemeral=True)
        else:
            await interaction.response.send_message('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π', ephemeral=True)

@client_discord.slash_command(name='members', description='–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')
async def members(interaction: Interaction):
    logger = logging.getLogger(__name__)
    logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {interaction.user.mention} –≤—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–ø–∏—Å–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞')
    if nextcord.utils.get(interaction.user.roles, name='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä') is not None:
        time = datetime.datetime.now().replace(microsecond=0)
        guild = interaction.guild
        members_info = [f"{member.mention}-{member.name} (ID: {member.id}) (–í—ã—Å—à–∞—è —Ä–æ–ª—å: {member.top_role})" for member
                        in guild.members]

        embed = nextcord.Embed(title='–£—á–∞—Å—Ç–Ω–∏–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞', description='\n'.join(members_info), color=0xffffff)
        embed.set_footer(text=f'{servername_to_footer} Info {time}\n–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ {guild.member_count} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤')
        await interaction.response.send_message(embed=embed, ephemeral=True)
    else:
        await interaction.response.send_message(f'{interaction.user.mention}. –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!', ephemeral=True)



@client_discord.slash_command(name='help', description='–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞')
async def help(interaction: Interaction,
             rank: str = SlashOption(
                  name="rank",
                  description='–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–Ω–≥: mod –∏–ª–∏ default',
                  choices=['default', 'mod'],
                  default='default'
             )
             ):
    logger = logging.getLogger(__name__)
    if rank == 'default':
        logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {interaction.user.mention} –≤—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥. –†–∞–Ω–≥: –£—á–∞—Å—Ç–Ω–∏–∫')
        time = datetime.datetime.now().replace(microsecond=0)
        embed = nextcord.Embed(title="–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã —Å–µ—Ä–≤–µ—Ä–∞", color=0xffffff)
        embed.add_field(name="–†–∞–Ω–≥: –£—á–∞—Å—Ç–Ω–∏–∫", value=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —É—á–∞—Å—Ç–Ω–∏–∫–µ: /info –£—á–∞—Å—Ç–Ω–∏–∫ \n–ê–≤–∞—Ç–∞—Ä —É—á–∞—Å—Ç–Ω–∏–∫–∞: /avatar –£—á–∞—Å—Ç–Ω–∏–∫ \n –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–≥–æ–¥–µ: /weather –ì–æ—Ä–æ–¥(–ª—é–±–æ–π)\n–í—ã–≤–µ—Å—Ç–∏ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: /help", inline=False)
        embed.set_footer(text=f'‚Ä¢{servername_to_footer} Help | {datetime.datetime.now().replace(microsecond=0)}',
                         icon_url=interaction.guild.icon.url)
        await interaction.response.send_message(embed=embed, ephemeral=True)
    elif rank == 'mod':
        if nextcord.utils.get(interaction.user.roles, name='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä') is not None:
            logger.info(
                f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {interaction.user.mention} –≤—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥. –†–∞–Ω–≥: –ú–æ–¥–µ—Ä–∞—Ü–∏—è')
            time = datetime.datetime.now().replace(microsecond=0)
            embed = nextcord.Embed(title="–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã —Å–µ—Ä–≤–µ—Ä–∞", color=0xffffff)
            embed.add_field(
                name="–†–∞–Ω–≥: –ú–æ–¥–µ—Ä–∞—Ü–∏—è",
                value=f"–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞: /ban –ù–∞—Ä—É—à–∏—Ç–µ–ª—å –ø—Ä–∏—á–∏–Ω–∞ \n–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞: /unban –ù–∞—Ä—É—à–∏—Ç–µ–ª—å –ø—Ä–∏—á–∏–Ω–∞ \n–£–¥–∞–ª–µ–Ω–∏–µ: /kick –ù–∞—Ä—É—à–∏—Ç–µ–ª—å –ø—Ä–∏—á–∏–Ω–∞ \n–û—Ç—á–∏—Å—Ç–∫–∞: /clear –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ(–º–æ–∂–Ω–æ –ª—é–±—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ª–∏–±–æ 0 –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ–≥–æ) \n–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —É—á–∞—Ç–Ω–∏–∫–æ–≤: /members \n–í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ—Ä–≤–µ—Ä–µ: /serverinfo \n–ó–∞–≥–ª—É—à–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞: /mute –ù–∞—Ä—É—à–∏—Ç–µ–ª—å –ø—Ä–∏—á–∏–Ω–∞"f" \n–†–∞–∑–≥–ª—É—à–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞: /unmute –ù–∞—Ä—É—à–∏—Ç–µ–ª—å –ø—Ä–∏—á–∏–Ω–∞ \n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —É—á–∞—Å—Ç–Ω–∏–∫–µ: /info –£—á–∞—Å—Ç–Ω–∏–∫ \n–ê–≤–∞—Ç–∞—Ä —É—á–∞—Å—Ç–Ω–∏–∫–∞: /avatar –£—á–∞—Å—Ç–Ω–∏–∫ \n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–≥–æ–¥–µ: /weather –ì–æ—Ä–æ–¥(–ª—é–±–æ–π) \n–í—ã–≤–æ–¥ —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: /help mod\n–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: /say (—Å–æ–æ–±—â–µ–Ω–∏–µ)\n–î–µ–π—Å—Ç–≤–∏—è —Å –ª–æ–≥–∞–º–∏: /log (download, archive, save)",
                inline=False)
            embed.set_footer(text=f' ‚Ä¢{servername_to_footer} Help | {datetime.datetime.now().replace(microsecond=0)}',
                             icon_url=interaction.guild.icon.url)
            await interaction.response.send_message(embed=embed, ephemeral=True)
        else:
            await interaction.response.send_message('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–º–∞–Ω–¥', ephemeral=True)
@client_discord.slash_command(name='mute', description='–ó–∞–≥–ª—É—à–∞–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞')
async def mute(interaction: Interaction, member: nextcord.Member, reason: str = SlashOption(description='–ü—Ä–∏—á–∏–Ω–∞ –∑–∞–≥–ª—É—à–µ–Ω–∏—è', default="–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞")):
    logger = logging.getLogger(__name__)
    logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {interaction.user.mention} –≤—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É –¥–ª—è –∑–∞–≥–ª—É—à–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞')
    if nextcord.utils.get(interaction.user.roles, name='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä') is not None:
        try:
            mute_role = nextcord.utils.get(interaction.guild.roles, name="Muted")
            if not mute_role:
                mute_role = await interaction.guild.create_role(name="Muted",permissions=discord.Permissions(send_messages=False,speak=False))
                await mute_role.edit(position=1)
            await member.add_roles(mute_role, reason=reason)
            logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {member.mention} –±—ã–ª –∑–∞–≥–ª—É—à—ë–Ω {interaction.user.mention} –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {reason}')
            try:
                database_location = sqlite3.connect(f'{servername_database}_discord.db')
                cursor = database_location.cursor()
                cursor.execute("""
                    INSERT INTO mod_actions (action_type, guild_id, moderator_name, moderator_id, target_user_name, target_user_id, reason, action_time) 
                    VALUES (?, ?, ?, ?, ?, ?, ?, ?)
                """, ('Mute', interaction.guild.id, interaction.user.name, interaction.user.id, member.name, member.id, reason,
                      datetime.datetime.now()))
                database_location.commit()
            except sqlite3.Error as e:
                logger.error(f'Something went wrong! Error: {e}')
            finally:
                database_location.close()
            if reason in ['–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞']:
                await warn(interaction, interaction.guild.id, interaction.user.id,
                           interaction.user.name, interaction.guild)
            time = datetime.datetime.now().replace(microsecond=0)
            embed = nextcord.Embed(title=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–≥–ª—É—à–µ–Ω–∏–∏", color=nextcord.Color.dark_purple())
            embed.add_field(name=' ', value=f'–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {interaction.user.mention}\n–ü—Ä–∏—á–∏–Ω–∞: {reason}\n–ó–∞–≥–ª—É—à—ë–Ω–Ω—ã–π: {member.mention}')
            embed.set_footer(text=f' ‚Ä¢{servername_to_footer} Moderation | {datetime.datetime.now().replace(microsecond=0)}',
                             icon_url=interaction.guild.icon.url)
            await interaction.response.send_message(embed=embed)
        except nextcord.Forbidden:
            logger.error('–£ –±–æ—Ç–∞ –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∑–∞–≥–ª—É—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!')
            await interaction.response.send_message('–£ –º–µ–Ω—è –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!',
                                                    ephemeral=True)
    else:
        logger.info(f'–£ {interaction.user.mention} –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
        await interaction.response.send_message('–£ –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!',
                                                ephemeral=True)

@client_discord.slash_command(name='unmute', description='–°–Ω–∏–º–∞–µ—Ç –∑–∞–≥–ª—É—à–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞')
async def unmute(interaction: Interaction, member: nextcord.Member, reason: str = SlashOption(description='–ü—Ä–∏—á–∏–Ω–∞ –∑–∞–≥–ª—É—à–µ–Ω–∏—è', default="–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞")):
    logger = logging.getLogger(__name__)
    logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {interaction.user.mention} –≤—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É –¥–ª—è —Å–Ω—è—Ç–∏—è –∑–∞–≥–ª—É—à–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞')
    if nextcord.utils.get(interaction.user.roles, name='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'):
        try:
            mute_role = nextcord.utils.get(interaction.guild.roles, name="Muted")
            if not mute_role:
                mute_role = await interaction.guild.create_role(name="Muted",permissions=discord.Permissions(send_messages=False,speak=False))
                await mute_role.edit(position=1)
            await member.remove_roles(mute_role, reason=reason)
            logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {member.mention} –±—ã–ª —Ä–∞–∑–≥–ª—É—à—ë–Ω {interaction.user.mention} –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {reason}')
            try:
                database_location = sqlite3.connect(f'{servername_database}_discord.db')
                cursor = database_location.cursor()
                cursor.execute("""
                    INSERT INTO mod_actions (action_type, guild_id, moderator_name, moderator_id, target_user_name, target_user_id, reason, action_time) 
                    VALUES (?, ?, ?, ?, ?, ?, ?, ?)
                """, ('Unmute', interaction.guild.id, interaction.user.name, interaction.user.id, member.name, member.id, reason,
                      datetime.datetime.now()))
                database_location.commit()
            except sqlite3.Error as e:
                logger.error(f'Something went wrong! Error: {e}')
            finally:
                database_location.close()
            if reason in ['–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞']:
                await warn(interaction, interaction.guild.id, interaction.user.id,
                           interaction.user.name, interaction.guild)
            time = datetime.datetime.now().replace(microsecond=0)
            embed = nextcord.Embed(title='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–∞–∑–≥–ª—É—à–µ–Ω–∏–∏', color=nextcord.Color.dark_purple())
            embed.add_field(name=' ', value=f'–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {interaction.user.mention}\n–ü—Ä–∏—á–∏–Ω–∞: {reason}\n–†–∞–∑–≥–ª—É—à—ë–Ω–Ω—ã–π: {member.mention}')
            embed.set_footer(text=f' ‚Ä¢{servername_to_footer} Moderation | {datetime.datetime.now().replace(microsecond=0)}',
                             icon_url=interaction.guild.icon.url)
            await interaction.response.send_message(embed=embed)
        except nextcord.Forbidden:
            logger.error('–£ –±–æ—Ç–∞ –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∑–∞–≥–ª—É—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!')
            await interaction.response.send_message('–£ –º–µ–Ω—è –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!',
                                                    ephemeral=True)
    else:
        logger.info(f'–£ {interaction.user.mention} –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
        await interaction.response.send_message('–£ –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!',
                                                ephemeral=True)

@client_discord.slash_command(name='unban', description='–°–Ω–∏–º–∞–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫—É —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
async def unban(interaction: Interaction, user_id: str, reason: str = SlashOption(description='–ü—Ä–∏—á–∏–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏', default='–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞')):
    logger = logging.getLogger(__name__)
    logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {interaction.user.mention} –≤—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É –¥–ª—è —Å–Ω—è—Ç–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Å —É—á–∞—Å—Ç–Ω–∏–∫–∞')

    if nextcord.utils.get(interaction.user.roles, name='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'):
        try:
            user = await client_discord.fetch_user(int(user_id))
            await interaction.guild.unban(user, reason=reason)
            time = datetime.datetime.now().replace(microsecond=0)
            embed = nextcord.Embed(title='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–µ', color=nextcord.Color.dark_purple())
            embed.add_field(name=' ', value=f'–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {interaction.user.mention}\n'
                                            f'{reason_emodji} –ü—Ä–∏—á–∏–Ω–∞: {reason}\n'
                                            f'–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π: {user.mention}\n')
            embed.set_footer(
                text=f' ‚Ä¢{servername_to_footer} Moderation | {datetime.datetime.now().replace(microsecond=0)}',
                icon_url=interaction.guild.icon.url)

            if reason == '–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞':
                await warn(interaction, interaction.guild.id, interaction.user.id,
                           interaction.user.name, interaction.guild)  # –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ warn –∑–¥–µ—Å—å

            try:
                database_location = sqlite3.connect(f'{servername_database}_discord.db')
                cursor = database_location.cursor()
                cursor.execute("""
                    INSERT INTO mod_actions (action_type, guild_id, moderator_name, moderator_id, target_user_name, target_user_id, reason, action_time)
                    VALUES (?, ?, ?, ?, ?, ?, ?, ?)
                """, ('Unban', interaction.guild.id, interaction.user.name, interaction.user.id,
                      user.name, user.id, reason, datetime.datetime.now()))
                database_location.commit()
            except Exception as e:
                logger.error(f'Something went wrong! Error: {e}')
            finally:
                database_location.close()

            await interaction.response.send_message(embed=embed)
        except nextcord.errors.Forbidden:
            logger.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: discord.errors.Forbidden")
            await interaction.response.send_message('–£ –º–µ–Ω—è –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤', ephemeral=True)
        except nextcord.errors.NotFound:
            logger.error(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: discord.errors.NotFound')
            await interaction.response.send_message('–£—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö', ephemeral=True)
    else:
        await interaction.response.send_message('–£ –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã', ephemeral=True)
@client_discord.slash_command(name='info', description='–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —É—á–∞—Å—Ç–Ω–∏–∫–µ')
async def info(interaction: Interaction, member: nextcord.Member,
               hidden: str = SlashOption(
                   name="hidden",
                   description='–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–∫ –±—É–¥–µ—Ç –æ–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ',
                   choices=['hidden', 'shown'],
                   default='hidden'
               )):
    logger = logging.getLogger(__name__)
    logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {interaction.user.mention} –≤—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —É—á–∞—Å—Ç–Ω–∏–∫–µ')
    time = datetime.datetime.now().replace(microsecond=0)
    excepted_roles = ["@everyone", "Member"]
    role_count = len([role.name for role in member.roles if role.name not in excepted_roles])
    roles = member.roles
    role_names = [role.name for role in roles if role.name not in excepted_roles]
    role_list = ' '.join(role_names)
    discriminator = member.discriminator
    if discriminator == 0:
        discriminator = None
    embed = nextcord.Embed(title=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ {member.name}", color=0xffffff)
    embed.set_thumbnail(url=member.avatar.url)
    embed.add_field(name="–ù–∏–∫–Ω–µ–π–º:", value=member.name, inline=True)
    embed.add_field(name="–ü—Ä–æ—Ñ–∏–ª—å:", value=member.mention, inline=True)
    embed.add_field(name="–ü–æ–ª–Ω–æ–µ –∏–º—è:", value=f'{member.name}#{discriminator}', inline=True)
    embed.add_field(name="ID:", value=member.id, inline=True)
    embed.add_field(name="–î–∞—Ç–∞ –ø—Ä–∏—Å–æ–µ–¥–µ–Ω–µ–Ω–∏—è:", value=f'<t:{int(member.joined_at.timestamp())}:R>', inline=True)
    embed.add_field(name='–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è: ', value=f'<t:{int(member.created_at.timestamp())}:R>')
    embed.add_field(name="–†–æ–ª—å:", value=member.top_role.name, inline=True)
    embed.add_field(name="–†–æ–ª–∏:", value=role_list)
    embed.add_field(name='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–æ–ª–µ–π:', value=role_count)
    embed.set_footer(text=f'‚Ä¢ {servername_to_footer} Info | {datetime.datetime.now().replace(microsecond=0)}',
                     icon_url=interaction.guild.icon.url)
    if hidden == 'hidden':
        await interaction.response.send_message(embed=embed, ephemeral=True)
    elif hidden == 'shown':
        await interaction.response.send_message(embed=embed, ephemeral=False)

@client_discord.slash_command(name='say', description='–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞')
async def say(interaction: Interaction, message: str = SlashOption(description='–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –≤–≤–µ–¥—ë–Ω–Ω—ã–π –∑–¥–µ—Å—å')):
    logger = logging.getLogger(__name__)
    logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {interaction.user.mention} –≤—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞')
    time = datetime.datetime.now().replace(microsecond=0)
    if nextcord.utils.get(interaction.user.roles, name='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'):
        await interaction.channel.send(message)
        await interaction.response.send_message('–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ', ephemeral=True)
        logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {interaction.user.name} –æ—Ç–ø—Ä–∞–≤–∏–ª ({message}) –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞')
    else:
        await interaction.response.send_message(f'–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã\n{servername_to_footer} Moderation {time}', ephemeral=True)
@client_discord.slash_command(name='avatar', description='–û—Ç–ø—Ä–∞–ª—è–µ—Ç –∞–≤–∞—Ç–∞—Ä–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
async def avatar(interaction: Interaction, member: nextcord.Member):
    logger = logging.getLogger(__name__)
    logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {interaction.user.mention} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É –¥–ª—è –≤—ã–≤–æ–¥–∞ –∞–≤–∞—Ç–∞—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    time = datetime.datetime.now().replace(microsecond=0)
    embed = nextcord.Embed(title=f'–ê–≤–∞—Ç–∞—Ä {member.name}', color=0xffffff)
    embed.set_image(url=member.avatar.url)
    embed.set_footer(text=f'‚Ä¢ {servername_to_footer} Info | {datetime.datetime.now().replace(microsecond=0)}',
                     icon_url=interaction.guild.icon.url)
    await interaction.response.send_message(embed=embed)
@client_discord.slash_command(name='log', description='–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è —Å –ª–æ–≥–∞–º–∏')
async def log(interaction: Interaction,
              content: str = SlashOption(
                  name="action",
                  description='–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ —Å–æ–≤–µ—Ä—à–∏—Ç—å —Å –ª–æ–≥–∞–º–∏',
                  choices=['download',  'save', 'archive', 'delete']
              ),
              target: str = SlashOption(
                  name="target",
                  description='–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–∫—É–¥–∞ –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞: current, archive –∏–ª–∏ –ª—é–±–æ–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞',
                  default='current'
              )
):
    logger = logging.getLogger(__name__)
    logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {interaction.user.mention} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É –¥–ª—è –≤—ã–≤–æ–¥–∞ –ª–æ–≥–æ–≤')
    if nextcord.utils.get(interaction.user.roles, name='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'):
        if content.lower() in ['delete']:
            if target in ['archive']:
                if interaction.user.name == 'ivan_kem_twink':
                    folder_path = 'archive_logs'
                    if os.path.exists(folder_path):
                        for filename in os.listdir(folder_path):
                            file_path = os.path.join(folder_path, filename)
                            if os.path.isfile(file_path):
                                os.remove(file_path)
                        await interaction.response.send_message('–ü–∞–ø–∫–∞ —Å –∞—Ä—Ö–∏–≤–æ–º –ª–æ–≥–æ–≤ —É—Å–ø–µ—à–Ω–æ –æ—Ç—á–∏—â–µ–Ω–∞', ephemeral=True)
                        win_notification('User clear archive logs', f'{interaction.user.name} cleared archive log files\nTime: {datetime.datetime.now().replace(microsecond=0)}')
                    else:
                        print(f"–ü–∞–ø–∫–∞ '{folder_path}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
                else:
                    await interaction.response.send_message('–í–∞—Å –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ —Ä–∞–∑—Ä–µ—à—ë–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', ephemeral=True)
            if target in ['current']:
                if interaction.user.name == 'ivan_kem_twink':
                    logging.shutdown()
                    open('log.log', 'w').close()
                    logging.basicConfig(filename='log.log', level=logging.INFO)
                    await interaction.response.send_message(f'–î–µ–π—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª –ª–æ–≥–æ–≤ —É–¥–∞–ª—ë–Ω', ephemeral=True)
                    win_notification('User clear current log', f'{interaction.user.name} cleared main logging file\nTime: {datetime.datetime.now().replace(microsecond=0)}')
        if content.lower() in ['download', 'Download', 'dowload', 'Dowload']:
            if content == 'download':
                if target == 'current':
                    logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {interaction.user.name} –∑–∞–ø—Ä–æ—Å–∏–ª –±–∞–∑—É —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –ª–æ–≥–æ–≤!')
                    await interaction.response.send_message(file=nextcord.File(f'log.log'),
                                                            ephemeral=True)
                    win_notification('User downloaded log',
                                     f'Current log file downloaded by {interaction.user.name}')
                elif target in ['Archive', 'archive']:
                    archive_logs_dir = os.path.join(os.getcwd(), 'archive_logs')
                    files = os.listdir(archive_logs_dir)
                    await interaction.response.defer(ephemeral=True)
                    for file in files:
                        file_path = os.path.join(archive_logs_dir, file)
                        await interaction.followup.send(file=nextcord.File(file_path), ephemeral=True)
                    win_notification('User downloaded log',
                                     f'{interaction.user.name} downloaded archive log files\nTime: {datetime.datetime.now().replace(microsecond=0)}')
                else:
                    logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {interaction.user.name} –∑–∞–ø—Ä–æ—Å–∏–ª –±–∞–∑—É —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –ª–æ–≥–æ–≤!')
                    try:
                        await interaction.response.send_message(file=nextcord.File(f'archive_logs\\{target}'),
                                                                ephemeral=True)
                    except FileNotFoundError:
                        await interaction.response.send_message(f'–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω', ephemeral=True)
                    win_notification('User downloaded log', f'{target} downloaded by {interaction.user.name}')

            else:
                await interaction.response.send_message('–í—ã –≤–≤–µ–ª–∏ –Ω–µ –≤–µ—Ä–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ–º, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞', ephemeral=True)
        elif content.lower() in ['save', 'Save']:
            log_channel = nextcord.utils.get(interaction.guild.channels, name='logs')
            if log_channel:
                file = 'log.log'
                with open(file, 'r') as file1:
                    first_line_temp = file1.readline()
                    first_line = first_line_temp.strip()
                log_datetime_str = first_line.split(' ', 1)[0]
                log_datetime = datetime.datetime.strptime(log_datetime_str, "%Y-%m-%d")

                last_change_time = os.path.getmtime('log.log')
                last_change_timestamp = int(last_change_time)

                try:
                    await log_channel.send(file=nextcord.File('log.log'))
                    await log_channel.send(
                        f'–≠—Ç–æ —Ñ–∞–π–ª –ª–æ–≥–æ–≤ –∑–∞ –≤—Ä–µ–º—è —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—ã–∑–æ–≤–∞.\n'
                        f'–í—ã–∑–≤–∞–ª: {interaction.user.mention}\n'
                        f'–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: <t:{int(log_datetime.timestamp())}:R>\n'
                        f'–î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è: <t:{last_change_timestamp}:R>'
                    )
                except nextcord.errors.Forbidden:
                    await interaction.response.send_message('–£ –º–µ–Ω—è –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞ —Å –ª–æ–≥–∞–º–∏!', ephemeral=True)
                if not os.path.exists('archive_logs'):
                    os.makedirs('archive_logs')

                logging.shutdown()
                if not os.path.exists('archive_logs'):
                    os.makedirs('archive_logs')

                new_log_name = f"log_{datetime.datetime.now().strftime('%Y-%m-%d_%H-%M-%S')}.log"
                new_log_path = os.path.join('archive_logs', new_log_name)

                shutil.move('log.log', new_log_path)

                open('log.log', 'w').close()

                logging.basicConfig(filename='log.log', level=logging.INFO)
                await interaction.response.send_message(
                        f'–§–∞–π–ª –ª–æ–≥–æ–≤ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –≤ –∫–∞–Ω–∞–ª logs –∏ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–Ω', ephemeral=True)
                win_notification('User rewrited (save) log',
                                 f'{interaction.user.name} rewrited current log file\nTime: {datetime.datetime.now().replace(microsecond=0)}')
            else:
                interaction.response.send_message('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª –ª–æ–≥–æ–≤!', ephemeral=True)
        elif content.lower() in ['archive', 'Archive']:
            archive_logs_dir = os.path.join(os.getcwd(), 'archive_logs')

            if not os.path.exists(archive_logs_dir) or not os.path.isdir(archive_logs_dir):
                await interaction.response.send_message("–ü–∞–ø–∫–∞ archive_logs –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", ephemeral=True)
                return

            files = os.listdir(archive_logs_dir)

            embed = nextcord.Embed(title="–°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ –∞—Ä—Ö–∏–≤–µ –ª–æ–≥–æ–≤", color=0xffffff)

            for file in files:
                file_path = os.path.join(archive_logs_dir, file)
                file_size = os.path.getsize(file_path)
                embed.add_field(name=file, value=f"–†–∞–∑–º–µ—Ä: {(file_size/1024.0):.2f}–∫–±", inline=False)
                embed.set_footer(
                    text=f'‚Ä¢ {servername_to_footer} Log | {datetime.datetime.now().replace(microsecond=0)}',
                    icon_url=interaction.guild.icon.url)
            await interaction.response.send_message(embed=embed, ephemeral=True)
    else:
        await interaction.response.send_message('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã',
                                                ephemeral=True)
@client_discord.slash_command(name='weather', description='–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–≥–æ–¥—É –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ')
async def weather(interaction: Interaction, city: str = SlashOption(description='–£–∫–∞–∂–∏—Ç–µ –≥–æ—Ä–æ–¥')):
    logger = logging.getLogger(__name__)
    logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {interaction.user.mention} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–≥–æ–¥—ã')

    url = f'http://api.openweathermap.org/data/2.5/weather?q={city}&appid={API_Weather}&units=metric'
    time = datetime.datetime.now().replace(microsecond=0)
    response = requests.get(url)
    logger.info(f"–ó–∞–ø—Ä–æ—Å –∫ API OpenWeatherMap: {url}")

    if response.status_code == 200:
        weather_data = response.json()
        try:
            filtered_data = {
                "X": weather_data['coord']['lon'],
                "Y": weather_data['coord']['lat'],
                "Temp_min": weather_data['main']['temp_min'],
                "Temp_max": weather_data['main']['temp_max'],
                "Temp": weather_data['main']['temp'],
                "Feels_like": weather_data['main']['feels_like'],
                "Country": weather_data['sys']['country'],
                "Wind_speed": weather_data['wind']['speed'],
                "Humidity": weather_data['main']['humidity'],
                "City_id": weather_data['id']
            }
            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–æ–≥–æ–¥—ã –¥–ª—è –≥–æ—Ä–æ–¥–∞ {city} –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ.")
        except KeyError:
            logger.error(f"–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–≥–æ–¥—ã –¥–ª—è –≥–æ—Ä–æ–¥–∞ {city}.")
            embed = nextcord.Embed(title=f"–û—à–∏–±–∫–∞", color=0xff0000)
            embed.add_field(name=f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!", value='–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–≥–æ–¥—ã.')
            await interaction.response.send_message(embed=embed, ephemeral=True)
            return

        try:
            url_png = f"https://tile.openweathermap.org/map/temp_new/0/0/0.png?appid={API_Weather}"
            embed = nextcord.Embed(title=f"–ü–æ–≥–æ–¥–∞ –≤ {city}", color=0x376abd)
            embed.set_thumbnail(url=url_png)
            embed.add_field(
                name=f"–ì–æ—Ä–æ–¥: {city}, –°—Ç—Ä–∞–Ω–∞: {filtered_data['Country']}",
                value=f"–°—Ä–µ–¥–Ω—è—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {filtered_data['Temp']}¬∞C\n"
                      f"–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {filtered_data['Temp_min']}¬∞C\n"
                      f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {filtered_data['Temp_max']}¬∞C\n"
                      f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ –æ—â—É—â–µ–Ω–∏—è–º: {filtered_data['Feels_like']}¬∞C\n"
                      f"–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {filtered_data['Wind_speed']} –º/—Å\n"
                      f"–í–ª–∞–∂–Ω–æ—Å—Ç—å: {filtered_data['Humidity']}%\n"
                      f"–ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω: {time}\n"
                      f"–ó–∞–ø—Ä–æ—Å–∏–ª: {interaction.user.mention}\n"
                      f"–ò—Å—Ç–æ—á–Ω–∏–∫: https://openweathermap.org/city/{filtered_data['City_id']}"
            )
            embed.set_footer(text=f'‚Ä¢ {servername_to_footer} Weather | {datetime.datetime.now().replace(microsecond=0)}',
                             icon_url=interaction.guild.icon.url)
            logger.info(f"–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –¥–ª—è –≥–æ—Ä–æ–¥–∞ {city} —É—Å–ø–µ—à–Ω–æ –≤—ã–≤–µ–¥–µ–Ω.")
            await interaction.response.send_message(embed=embed, ephemeral=True)
        except requests.exceptions.HTTPError as e:
            logger.error(f"–û—à–∏–±–∫–∞ HTTP: {e}")
            embed = nextcord.Embed(title=f"–û—à–∏–±–∫–∞", color=0xff0000)
            embed.add_field(name=f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö", value='–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω')
            embed.set_footer(
                text=f'‚Ä¢ {servername_to_footer} Weather | {datetime.datetime.now().replace(microsecond=0)}',
                icon_url=interaction.guild.icon.url)
            await interaction.response.send_message(embed=embed, ephemeral=True)
        except requests.exceptions.RequestException as e:
            logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
            embed = nextcord.Embed(title=f"–û—à–∏–±–∫–∞", color=0xff0000)
            embed.add_field(name=f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö", value='–û—à–∏–±–∫–∞ —Å –∑–∞–ø—Ä–æ—Å–æ–º –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞')
            embed.set_footer(
                text=f'‚Ä¢ {servername_to_footer} Weather | {datetime.datetime.now().replace(microsecond=0)}',
                icon_url=interaction.guild.icon.url)
            await interaction.response.send_message(embed=embed, ephemeral=True)
    else:
        logger.error(f"–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–≥–æ–¥—ã. –ö–æ–¥ –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        embed = nextcord.Embed(title=f"–û—à–∏–±–∫–∞", color=0xff0000)
        embed.add_field(name=f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö", value='')
        embed.set_footer(text=f'‚Ä¢ {servername_to_footer} Weather | {datetime.datetime.now().replace(microsecond=0)}',
                         icon_url=interaction.guild.icon.url)
        await interaction.response.send_message(embed=embed, ephemeral=True)


@client_discord.slash_command(name='database', description='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–∞')
async def database(interaction: Interaction,
                   content: str = SlashOption(
                       name="action",
                       description='–î–µ–π—Å—Ç–≤–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö',
                       choices=['start', 'download', 'save', 'archive']
                   ),
                   target: str = SlashOption(
                       name='target',
                       description='–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–∫–æ–π —Ñ–∞–π–ª —Ö–æ—Ç–∏—Ç–µ —Å–∫–∞—á–∞—Ç—å',
                       default='current'
                   )):
    logger = logging.getLogger(__name__)
    logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {interaction.user.name} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É /database.')
    if nextcord.utils.get(interaction.user.roles, name='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'):
        if content == 'start':
            try:
                database_location = sqlite3.connect(f'{servername_database}_discord.db')
                cursor = database_location.cursor()
                cursor.execute('''
                    CREATE TABLE IF NOT EXISTS users_list (
                        user_id INTEGER PRIMARY KEY,
                        user_name TEXT NOT NULL,
                        user_mention TEXT NOT NULL,
                        user_joined_date DATETIME NOT NULL
                    )
                ''')
                database_location.commit()
                users_data = [(member.id, member.name, member.mention, member.joined_at) for member in
                              interaction.guild.members]
                cursor.executemany(
                    "INSERT OR IGNORE INTO users_list (user_id, user_name, user_mention, user_joined_date) VALUES (?, ?, ?, ?)",
                    users_data)
                database_location.commit()

                await interaction.response.send_message(f'–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö {servername_database}_discord.db –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞.', ephemeral=True)

            except sqlite3.Error as e:
                logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö: {e}')
                await interaction.response.send_message(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö: {e}')

            except Exception as e:
                logger.error(f'–û—à–∏–±–∫–∞: {e}')
                await interaction.response.send_message(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}')
        if content == 'download':
            if target == 'current':
                logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {interaction.user.name} –∑–∞–ø—Ä–æ—Å–∏–ª –±–∞–∑—É —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö!')
                await interaction.response.send_message(file=nextcord.File(f'{servername_database}_discord.db'),
                                                        ephemeral=True)
                win_notification('Request database',
                                 f'{servername_database}_discord.db downloaded by {interaction.user.name}')
            else:
                logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {interaction.user.name} –∑–∞–ø—Ä–æ—Å–∏–ª –±–∞–∑—É —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö!')
                try:
                    await interaction.response.send_message(file=nextcord.File(f'archive_database\\{target}'), ephemeral=True)
                except FileNotFoundError:
                    await interaction.response.send_message(f'–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω', ephemeral=True)
                win_notification('Request database', f'{target} downloaded by {interaction.user.name}')
        if content == 'save':
            logger.warning(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {interaction.user.name} –∑–∞–ø—Ä–æ—Å–∏–ª –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö')
            database_location = sqlite3.connect(f'{servername_database}_discord.db')
            database_location.commit()
            database_location.close()
            logging.info(f'–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö {servername_database}_discord.db —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞')
            win_notification('Database stopped', f'{servername_database}_discord.db saved!')
            await interaction.response.send_message(f'–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö {servername_database}_discord.db —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞', ephemeral=True)
            try:
                shutil.copy2(f'{servername_database}_discord.db',
                             f'archive_database/{servername_database}_discord_{datetime.datetime.now().strftime("%Y-%m-%d_%H-%M-%S")}.db')
            except FileNotFoundError:
                logger.error(
                    f'–§–∞–π–ª {servername_database}_discord.db –Ω–µ –Ω–∞–π–¥–µ–Ω. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –±—ã–ª —É–∂–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω –≤ –∞—Ä—Ö–∏–≤.')
            except OSError as e:
                logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}')
            database_channel = nextcord.utils.get(interaction.guild.channels, name='database')
            if database_channel:
                last_change_time = os.path.getmtime(f'{servername_database}_discord.db')
                last_change_timestamp = int(last_change_time)
                try:
                    await database_channel.send(file=nextcord.File(f'{servername_database}_discord.db'))
                    await database_channel.send(
                        f'–≠—Ç–æ —Ñ–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è.\n'
                        f'–í—ã–∑–≤–∞–ª: {interaction.user.mention}\n'
                        f'–î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è: <t:{last_change_timestamp}:R>'
                    )
                except FileNotFoundError:
                    await interaction.response.send_message('–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω', ephemeral=True)
        if content.lower() in ['archive', 'Archive']:
            archive_database_dir = os.path.join(os.getcwd(), 'archive_database')

            if not os.path.exists(archive_database_dir) or not os.path.isdir(archive_database_dir):
                await interaction.response.send_message("–ü–∞–ø–∫–∞ archive_database –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", ephemeral=True)
                return

            files = os.listdir(archive_database_dir)

            embed = nextcord.Embed(title="–°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ –∞—Ä—Ö–∏–≤–µ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö", color=0xffffff)

            for file in files:
                file_path = os.path.join(archive_database_dir, file)
                file_size = os.path.getsize(file_path)
                embed.add_field(name=file, value=f"–†–∞–∑–º–µ—Ä: {(file_size/1024.0):.2f}–∫–±\n", inline=False)
                embed.set_footer(
                    text=f'‚Ä¢ {servername_to_footer} Database | {datetime.datetime.now().replace(microsecond=0)}',
                    icon_url=interaction.guild.icon.url)
            await interaction.response.send_message(embed=embed, ephemeral=True)
    else:
        await interaction.response.send_message('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')
try:
    client_discord.run(TOKEN)
except Exception as e:
    print(f'Error {e}')
    client_discord.run(TOKEN)
